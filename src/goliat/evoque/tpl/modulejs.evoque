/*
        
    Goliat : The Twisted and ExtJS Web Application Framwork. 
    Copyright (C) 2010 - 2011 Open Phoenix IT S.Coop.And.
    Visit us at: http://www.open-phoenix.com
          
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
          
 */
Ext.ns("${app_name}");

/**
 * @class ${app_name}.${module_name}
 * @extends ${module_base_component}
 * ${app_name} ${app_description}
 * <br />
 * @constructor
 * @param {Object} config The config object
 * @xtype ${app_name}_${module_name_xtype}
 */
 ${app_name}.${module_name} = Ext.extend(Ext.${module_base_component}, {
    /**
     * Module component Model Store object.
     * @property
     */
    modelStore : null,
    
    /**
     * Module component Model url.
     * @property
     */
    modelUrl : '/${module_register_path}'
    
    constructor: function(config) {
        // Any initialization code can be placed here
        config = Ext.applyIf({
            // Config object options can be placed here
        }, config);
        ${app_name}.${module_name}.superclass.constructor.call(this, config);
    },
    
    initComponent: function() {
        this.modelStore = this.buildModelStore();
        
        ${app_name}.${module_name}.superclass.initComponent.call(this);
    },
    
    buildModelStore: function() {
        return new Goliat.ModelStore({
            // Set to false to manually load the model schema definition object
            autoLoad : true;
        }); 
    }
 }); 